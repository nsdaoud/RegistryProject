<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Dynamsoft.ImageCore</name>
  </assembly>
  <members>
    <member name="T:Dynamsoft.Core.ImageCore">
      <summary>
            A class that provides functionality to get images to buffer, process images and output images.
            </summary>
    </member>
    <member name="M:Dynamsoft.Core.ImageCore.#ctor"></member>
    <member name="M:Dynamsoft.Core.ImageCore.Dispose">
      <summary>
            Cleans up any resources being used.
            </summary>
    </member>
    <member name="P:Dynamsoft.Core.ImageCore.ImageBuffer">
      <summary>
            Defines a class providing functions for managing images in buffer.
            </summary>
    </member>
    <member name="P:Dynamsoft.Core.ImageCore.ImageProcesser">
      <summary>
            A class providing functions for processing images in buffer.
            </summary>
    </member>
    <member name="P:Dynamsoft.Core.ImageCore.IO">
      <summary>
            A class providing functions for loading images into buffer.
            </summary>
    </member>
    <member name="P:Dynamsoft.Core.ImageCore.Net">
      <summary>
            A class with the features for the images uploading and downloading.
            </summary>
    </member>
    <member name="T:Dynamsoft.Core.Annotation.AnnotationData">
      <summary>
            Defines the dynamsoft annotation class.
            </summary>
    </member>
    <member name="M:Dynamsoft.Core.Annotation.AnnotationData.#ctor"></member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.AnnotationType">
      <summary>
            Returns or sets the annotation type. To use the property, the property MouseShape should be set to false.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.CreationTime">
      <summary>
            Returns or sets the time when the annotation is created.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.Description">
      <summary>
            Returns or sets the description of the annotation.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.EndPoint">
      <summary>
            Returns or sets the right-bottom coordinate of the annotation.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.FillColor">
      <summary>
            Returns or sets the fill color and transparency for the area inside the annotation rectangle/ellipse. This property is only valid when the annotation type is NOT 2(Text).
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.FontType">
      <summary>
            Returns or sets the font type of the annotation text.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.GUID">
      <summary>
            Returns or sets the GUID of the annotation.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.Location">
      <summary>
            Returns the left-top coordinate of the annotation.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.ModifiedTime">
      <summary>
            Returns or sets the time when the annotation is last modified.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.Name">
      <summary>
            Returns or sets the name of the annotation.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.PenColor">
      <summary>
            Returns or sets the color of the pen for drawing the annotation rectangle/ellipse/line. This property is only valid when the annotation type is NOT 2(Text).
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.PenWidth">
      <summary>
            Returns or sets the width of the pen for drawing the annotation rectangle/ellipse/line. This property is only valid when the annotation type is NOT 2(Text).
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.Selected">
      <summary>
            Returns or sets if the annotation is selected.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.Size">
      <summary>
            Returns the size of the annotation.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.StartPoint">
      <summary>
            Returns or sets the left-top coordinate of the annotation.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.TextContent">
      <summary>
            Returns or sets the content of the annotation text.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.TextRotateType">
      <summary>
            Returns or sets the rotate angle of the annotation text.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnotationData.UserName">
      <summary>
            Returns or sets the user name of the annotation.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="T:Dynamsoft.Core.Annotation.AnnoTextFont">
      <summary>
            Defines a class getting or setting the properties of text annotation font. 
            </summary>
    </member>
    <member name="M:Dynamsoft.Core.Annotation.AnnoTextFont.#ctor"></member>
    <member name="P:Dynamsoft.Core.Annotation.AnnoTextFont.Name">
      <summary>
            Returns or sets the name of the text font.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnoTextFont.Size">
      <summary>
            Returns or sets the size of the text.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnoTextFont.Style">
      <summary>
            Returns or sets the style of the text.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Annotation.AnnoTextFont.TextColor">
      <summary>
            Returns or sets the color of the text.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="T:Dynamsoft.Core.Business.ImageBuffer">
      <summary>
            Defines a class with the features for the image operation in buffer.
             </summary>
    </member>
    <member name="P:Dynamsoft.Core.Business.ImageBuffer.CurrentImageIndexInBuffer">
      <summary>
            Returns the index of the current image selected in buffer or 
            sets the image with the specified index as the current image.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageBuffer.GetBitmap(System.Int16)">
      <summary>
            Gets the bitmap of a specified index in buffer.
            </summary>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based. </param>
      <returns>True indicates success. False indicates failure.</returns>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageBuffer.GetImageGuidByIndex(System.Int16)">
      <summary>
            Gets the image GUID by its index.
            </summary>
      <param name="idx">the index of the image in buffer.</param>
      <returns> 
            Returns a GUID. Empty indicates there is no such index.
            </returns>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageBuffer.GetImageIndexByGuid(System.Guid)">
      <summary>
            Gets the image index by its guid.
            </summary>
      <param name="guid">the GUID of the image.</param>
      <returns> 
            Returns an index(short). -1 indicates there is no such GUID.
            </returns>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageBuffer.GetMetaData(System.Int16,Dynamsoft.Core.Enums.EnumMetaDataType)">
      <summary>
            Gets the metadata of an image of a specified index.
            </summary>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based. </param>
      <param name="enumMetaDataType">The meta data type of an image </param>
      <returns>The data type of the return value is object.</returns>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.ImageBuffer.HowManyImagesInBuffer">
      <summary>
            Returns how many images are currently loaded in buffer. This is a runtime, read-only property.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.ImageBuffer.IfAppendImage">
      <summary>
            Returns or sets whether insert or append the newly scanned/loaded images.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.ImageBuffer.MaxImagesInBuffer">
      <summary>
            Returns or sets the maximum number of images can be held in buffer.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageBuffer.MoveImage(System.Int16,System.Int16)">
      <summary>
            Moves a specified image.
            </summary>
      <param name="sSourceImageIndex">Specifies the index of image in buffer. The index is 0-based. </param>
      <param name="sTargetImageIndex">Specifies the index of image in buffer. The index is 0-based. </param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="E:Dynamsoft.Core.Business.ImageBuffer.OnAdded">
      <summary>
            This event is triggered after the images are loaded into buffer.
            </summary>
    </member>
    <member name="E:Dynamsoft.Core.Business.ImageBuffer.OnRemoved">
      <summary>
            This event is triggered after the image is removed.
            </summary>
    </member>
    <member name="E:Dynamsoft.Core.Business.ImageBuffer.OnUpdated">
      <summary>
            This event is triggered after the images are updated.
            </summary>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageBuffer.RemoveAllImages">
      <summary>
            Returns all images in buffer.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageBuffer.RemoveImage(System.Int16)">
      <summary>
            Removes the image of a specified index in buffer.
            </summary>
      <param name="sImageIndexToBeDeleted">Specifies the index of image to be deleted in buffer. The index is 0-based.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageBuffer.RemoveImages(System.Collections.Generic.List{System.Int16})">
      <summary>
            Deletes the images of specified indices in the array.
            </summary>
      <param name="listImageIndex">Specifies the indices of image in buffer. The index is 0-based.
            ShortArray: an array with objects of short type. Its length is variable.
            </param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageBuffer.SetBitmap(System.Int16,System.Drawing.Bitmap)">
      <summary>
            Replaces the bitmap of a specified index in buffer.
            </summary>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based. </param>
      <param name="hBitmap">The bitmap of the target image that will replace the original one.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageBuffer.SetMetaData(System.Int16,Dynamsoft.Core.Enums.EnumMetaDataType,System.Object,System.Boolean)">
      <summary>
            Sets the metadata of an image of a specified index.
            </summary>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based. </param>
      <param name="enumMetaType">The meta data type of an image. </param>
      <param name="annoObject">The value of meta data. </param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageBuffer.SwitchImage(System.Int16,System.Int16)">
      <summary>
            Switches two images of specified indices in buffer.
            </summary>
      <param name="sImageIndex1">Specifies the index of image in buffer. The index is 0-based. </param>
      <param name="sImageIndex2">Specifies the index of image in buffer. The index is 0-based. </param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="T:Dynamsoft.Core.Business.ImageProcesser">
      <summary>
            Defines a class provides functions for processing images in buffer.
            </summary>
    </member>
    <member name="P:Dynamsoft.Core.Business.ImageProcesser.BackgroundFillColor">
      <summary>
            Returns or sets the fill color of the selected area of an image when it is cut, erased, or rotated. It is a value specifying the 32-bit ARGB value.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.ImageProcesser.BlankImageMaxStdDev">
      <summary>
            Returns or sets the standard deviation of the pixels in the image.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.ImageProcesser.BlankImageThreshold">
      <summary>
            Returns or sets the dividing line between black and white. The default value is 128.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.ChangeImageSize(System.Int16,System.Int32,System.Int32,Dynamsoft.Core.Enums.EnumInterpolationMethod)">
      <summary>
            Changes the display size of the image of a specified index in buffer.
            </summary>
      <param name="sImageIndex">
            Specifies the index of image in buffer. The index is 0-based.
            </param>
      <param name="newx">
            Specifies the pixel width of the new image.
            </param>
      <param name="newy">
            Specifies the pixel height of the new image.
            </param>
      <param name="enumInterpolationMethod">
            Specifies the method to do interpolation.
            DWTInterpolationMethod Allowed Values
            <div class="tablediv"><table><tr valign="center"><th>Interpolation</th><th>Method</th></tr><tr valign="center"><td>1</td><td>NearestNeighbor </td></tr><tr valign="center"><td>2</td><td>Bilinear </td></tr><tr valign="center"><td>3</td><td>Bicubic </td></tr></table></div></param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.Crop(System.Int16,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Crops the image of a specified index in buffer.
            </summary>
      <param name="sImageIndex">
            Specifies the index of image in buffer. The index is 0-based.
            </param>
      <param name="iLeft">
            Specifies the x-coordinate of the upper-left corner of the rectangle.
            </param>
      <param name="iTop">
            Specifies the y-coordinate of the upper-left corner of the rectangle.
            </param>
      <param name="iRight">
            Specifies the x-coordinate of the lower-right corner of the rectangle.
            </param>
      <param name="iBottom">
            Specifies the y-coordinate of the lower-right corner of the rectangle.
            </param>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.CropToClipborad(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies the image of a specified index in buffer to clipboard in DIB format.
            </summary>
      <param name="iImageIndex">
            Specifies the index of image in buffer. The index is 0-based.
            </param>
      <param name="iLeft">
            Specifies the x-coordinate of the upper-left corner of the rectangle.
            </param>
      <param name="iTop">
            Specifies the y-coordinate of the upper-left corner of the rectangle.
            </param>
      <param name="iRight">
            Specifies the x-coordinate of the lower-right corner of the rectangle.
            </param>
      <param name="iBottom">
            Specifies the y-coordinate of the lower-right corner of the rectangle.
            </param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.CutFrameToClipborad(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Cuts the image data in the specified area to the system clipboard in DIB format.
            </summary>
      <param name="iImageIndex">Specifies the index of image in buffer. The index is 0-based.</param>
      <param name="iLeft">Specifies the x-coordinate of the upper-left corner of the rectangle.</param>
      <param name="iTop">Specifies the y-coordinate of the upper-left corner of the rectangle.</param>
      <param name="iRight">Specifies the x-coordinate of the lower-right corner of the rectangle.</param>
      <param name="iBottom">Specifies the y-coordinate of the lower-right corner of the rectangle.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.Erase(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Clears the specified area of a specified image, and fill the area with the fill color.
            </summary>
      <param name="iIndex">Specifies the index of image in buffer. The index is 0-based.</param>
      <param name="iLeft">Specifies the x-coordinate of the upper-left corner of the rectangle.</param>
      <param name="iTop">Specifies the y-coordinate of the upper-left corner of the rectangle.</param>
      <param name="iRight">Specifies the x-coordinate of the lower-right corner of the rectangle.</param>
      <param name="iBottom">Specifies the y-coordinate of the lower-right corner of the rectangle.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.Flip(System.Int16)">
      <summary>
            Flips the image of a specified index in buffer.
            </summary>
      <param name="iImageIndex">
            Specifies the index of image in buffer. The index is 0-based.
            </param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.GetSkewAngle(System.Int32)">
      <summary>
            Calculates the skew angle of the image of a specified index in buffer.
            </summary>
      <param name="iIndex">Specifies the index of image in buffer. The index is 0-based.  </param>
      <returns>The skew angle of the image.</returns>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.GetSkewAngle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Calculates the skew angle of the image of a specified index in buffer.
            </summary>
      <param name="iIndex">Specifies the index of image in buffer. The index is 0-based.  </param>
      <param name="iLeft">
            Specifies the x-coordinate of the upper-left corner of the rectangle.
            </param>
      <param name="iTop">
            Specifies the y-coordinate of the upper-left corner of the rectangle.
            </param>
      <param name="iRight">
            Specifies the x-coordinate of the lower-right corner of the rectangle.
            </param>
      <param name="iBottom">
            Specifies the y-coordinate of the lower-right corner of the rectangle.
            </param>
      <returns>The skew angle of the image.</returns>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.GrayScale(System.Int32)">
      <summary>
            Converts a specific image to a grayscale image.
            </summary>
      <param name="iIndex">Specifies the index of image in buffer. The index is 0-based.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.Invert(System.Int32)">
      <summary>
            Inverts the color of a specific image.
            </summary>
      <param name="iIndex">Specifies the index of image in buffer. The index is 0-based.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.IsBlankImage(System.Int32)">
      <summary>
            Detects whether an image is blank.
            </summary>
      <param name="iImageIndex">specifies the index of image in buffer. The index is 0-based.  </param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.IsBlankImage(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Detects whether a certain area on an image is blank.
            </summary>
      <param name="iImageIndex">specifies the index of image in the buffer. The index is 0-based.</param>
      <param name="iLeft">specifies the x-coordinate of the upper-left corner of the rectangle for detecting.</param>
      <param name="iTop">specifies the y-coordinate of the upper-left corner of the rectangle for detecting.</param>
      <param name="iRight">specifies the x-coordinate of the lower-right corner of the rectangle for detecting.</param>
      <param name="iBottom">specifies the y-coordinate of the lower-right corner of the rectangle for detecting.</param>
      <param name="bFuzzMatch">specifies whether use fuzzy matching when detecting.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.Mirror(System.Int16)">
      <summary>
            Mirrors the image of a specified index in buffer.
            </summary>
      <param name="sIndex">Specifies the index of image in buffer. The index is 0-based.  </param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.Rotate(System.Int16,System.Double,System.Boolean,Dynamsoft.Core.Enums.EnumInterpolationMethod)">
      <summary>
            Rotates the image of a specified index in buffer by specified angle.
            </summary>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based.  </param>
      <param name="dbAngle">Specifies the rotation angle.</param>
      <param name="bKeepSize">Specifies if keep the size or not.</param>
      <param name="EnumInterpolationMethod">
            Specifies the method to do interpolation.
            DWTInterpolationMethod Allowed Values
            <div class="tablediv"><table><tr valign="center"><th>Interpolation</th><th>Method</th></tr><tr valign="center"><td>1</td><td>NearestNeighbor </td></tr><tr valign="center"><td>2</td><td>Bilinear </td></tr><tr valign="center"><td>3</td><td>Bicubic </td></tr></table></div></param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.RotateLeft(System.Int16)">
      <summary>
            Rotates the image of a specified index in buffer by 90 degrees clockwise to the left.
            </summary>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based.  </param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.ImageProcesser.RotateRight(System.Int16)">
      <summary>
            Rotates the image of a specified index in buffer by 90 degrees clockwise to the right.
            </summary>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based.  </param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="T:Dynamsoft.Core.Business.IO">
      <summary>
            Defines a class provides functions for loading images in buffer. 
            </summary>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.AppendToTIFF(System.String,System.Collections.Generic.List{System.Int16})">
      <summary>
            Appends the images of specified indexes in buffer to the end of an existing tiff.
            </summary>
      <param name="strFileName">The name of the TIFF file to be appended. It should be the path on the local disk.</param>
      <param name="sImageIndex">Specifies a list of indexes of image in buffer. The index is 0-based.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.CopyFrameToClipboard(System.Int16,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies the image data in the specified area to the system clipboard in DIB format.
            </summary>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based.</param>
      <param name="iLeft">Specifies the x-coordinate of the upper-left corner of the rectangle.</param>
      <param name="iTop">Specifies the y-coordinate of the upper-left corner of the rectangle.</param>
      <param name="iRight">Specifies the x-coordinate of the lower-right corner of the rectangle.</param>
      <param name="iBottom">Specifies the y-coordinate of the lower-right corner of the rectangle.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.CopyToClipborad(System.Int16)">
      <summary>
            Copies the image of a specified index in buffer to clipboard in DIB format.
            </summary>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.GetImageSize(System.Int32,System.Int32,System.Int32)">
      <summary>
            Calculates the file size of the new image resized from the image of a specified index in buffer.
            </summary>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based.</param>
      <param name="iWidth">specifies the pixel width of the new image. </param>
      <param name="iHeight">specifies the pixel height of the new image. </param>
      <returns>
            -1 indicates failure. Other values indicate success.
            </returns>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.GetImageSizeWithSpecifiedType(System.Int16,Dynamsoft.Core.Enums.EnumImageFileFormat)">
      <summary>
            Calculates the file size in the specified format of the image specified by index.
            </summary>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based.</param>
      <param name="enumImageType">
            Specifies the type of an image file.
            EnumImageFileFormat
            <div class="tablediv"><table><tr valign="center"><th>Allowed Values</th><th>Image Type</th></tr><tr valign="center"><td>0</td><td>BMP, DIB </td></tr><tr valign="center"><td>1</td><td>JPG, JPEG, JPE, JFIF </td></tr><tr valign="center"><td>2</td><td> TIF, TIFF </td></tr><tr valign="center"><td>3</td><td>PNG </td></tr></table></div></param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.IO.JPEGQuality">
      <summary>
            Returns or sets the quality of the JPEG file.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.LoadDibFromClipboard">
      <summary>
            Loads a DIB format image from system clipboard into buffer.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.LoadImage(System.Drawing.Image)">
      <summary>
            Loads an image into buffer. It supports loading encrypted pdf files.
            </summary>
      <param name="image"> The image to be loaded.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
             When an error occurs, please check ImageCoreException.
             </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.LoadImage(System.String)">
      <summary>
            Loads an image into the buffer. It supports loading encrypted pdf files.
            </summary>
      <param name="strFileName">The name of the image to be loaded.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.LoadImage(System.String,Dynamsoft.Core.Enums.EnumImageFileFormat)">
      <summary>
            Loads an Image into the Dynamic.NET TWAIN.
            </summary>
      <param name="strFileName">The name of the file to be loaded. It should be the path on the local disk.</param>
      <param name="enumImageFileFormat">EnumImageFileFormat type, specifies the file format</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.LoadImageFromBytes(System.Byte[],Dynamsoft.Core.Enums.EnumImageFileFormat)">
      <summary>
            Loads image from a byte array with the specified file format.
            </summary>
      <param name="byBuffer">A byte array of the image data.</param>
      <param name="enumImageFileFormat">EnumImageFileFormat type, specifies the file format.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="E:Dynamsoft.Core.Business.IO.OnPostLoad">
      <summary>
            This event is triggered after images are loaded into the control from a local directory or memory.
            </summary>
    </member>
    <member name="E:Dynamsoft.Core.Business.IO.OnPrePageLoad">
      <summary>
            This event is triggered before each page of an image is loaded into the control from a local directory or memory.
            </summary>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.SaveAsBMP(System.String,System.Int16)">
      <summary>
            Saves the image of a specified index in buffer as a BMP file.
            </summary>
      <param name="strFileName">The name of the BMP file to be saved. It should be the path on the local disk.</param>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.SaveAsJPEG(System.String,System.Int16)">
      <summary>
            Saves the image of a specified index in buffer as a JPEG file.
            </summary>
      <param name="strFileName">The name of the JPEG file to be saved. It should be the path on the local disk.</param>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.SaveAsPNG(System.String,System.Int16)">
      <summary>
            Saves the image of a specified index in buffer as a PNG file.
            </summary>
      <param name="strFileName">The name of the PNG file to be saved. It should be the path on the local disk.</param>
      <param name="sImageIndex">Specifies the index of image in buffer. The index is 0-based.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.SaveAsTIFF(System.Collections.Generic.List{System.Int16})">
      <summary>
            Saves the images of the specified indices in buffer to a MultiPage TIFF byte array.
            </summary>
      <param name="sImageIndexList">Specifies the index of image in buffer. The index is 0-based.</param>
      <returns>
            A byte array where the image will be saved.
            </returns>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.SaveAsTIFF(System.String,System.Collections.Generic.List{System.Int16})">
      <summary>
            Saves the image of a specified index in buffer as a TIFF file.
            </summary>
      <param name="strFileName">The name of the TIFF file to be saved. It should be the path on the local disk.</param>
      <param name="sImageIndexList">Specifies the index of image in buffer. The index is 0-based.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.IO.SaveImageToBytes(System.Int16,Dynamsoft.Core.Enums.EnumImageFileFormat)">
      <summary>
            Saves the image of a specified index in buffer to a byte array in the specified file format.
            </summary>
      <param name="sImageIndex">Specifies the index of the image in buffer. The index is 0-based.</param>
      <param name="enumImageFileFormat">EnumImageFileFormat type, specifies the file format</param>
      <returns>
            A byte array where the image will be saved.
            </returns>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.IO.TiffCompressionType">
      <summary>
            Returns or sets the compression type of TIFF files. 
            To use EnumTiffCompressionType.TIFF_JPEG, you will need DynamicImage dll. Please put DynamicImage.dll/DynamicImagex64.dll in the fully qualified path of the current working directory. 
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="T:Dynamsoft.Core.Business.Net">
      <summary>
            Defines a class with the features for the images uploading and downloading.
            </summary>
    </member>
    <member name="M:Dynamsoft.Core.Business.Net.ClearAllHTTPFormField">
      <summary>
            Clears all the web forms which are used for image uploading.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.Net.FTPDownload(System.String,System.String)">
      <summary>
            Downloads an image from the FTP server.
            </summary>
      <param name="strFTPServer">
            The name of the FTP server.
            </param>
      <param name="strFTPRemoteFile">
            The name of the file to be downloaded.
            It should be the relative path of the file on the FTP server.
            </param>
      <returns> 
            The downloaded file in Byte.
            </returns>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.FTPPassword">
      <summary>
            Returns or sets the password used to log into the FTP server.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.FTPPort">
      <summary>
            Returns or sets the port number of the FTP server.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.Net.FTPUpload(System.String,System.String,System.Byte[])">
      <summary>
            Uploads an image to the FTP server.
            </summary>
      <param name="strFTPServer">
            The name of the FTP server.
            </param>
      <param name="strFTPRemoteFile">
            The name of the file to be uploaded.
            It should be the relative path of the file on the FTP server.
            </param>
      <param name="imageBytes">
            The image to be uploaded to the server in byte.
            </param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.Net.FTPUpLoad(System.String,System.String,System.Collections.Generic.List{System.Int16},Dynamsoft.Core.Enums.EnumImageFileFormat)">
      <summary>
            Uploads an image to the FTP server.
            </summary>
      <param name="strFTPServer">
            The name of the FTP server.
            </param>
      <param name="strFTPRemoteFile">
            The name of the file to be uploaded.
            It should be the relative path of the file on the FTP server.
            </param>
      <param name="listImageIndex">
            The list of indexes of images to be uploaded to the server in byte. The index is 0-based.
            </param>
      <param name="enumImageFileFormat">
            The format of the images to be saved on the FTP server.
            </param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.FTPUserName">
      <summary>
            Returns or sets the user name used to log into the FTP server.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.Net.HTTPDownload(System.String,System.String)">
      <summary>
            Downloads an image from the HTTP server.
            </summary>
      <param name="strHTTPServer">The name of the HTTP server.It should be only the name of the HTTP server, without "http://" or "https://".Port number is not needed here.</param>
      <param name="strHTTPRemoteFile">The name of the image to be downloaded. It should be the relative path of the file on the HTTP server.</param>
      <returns>
            The downloaded image in bytes.
            </returns>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.HTTPFieldNameofUploadedImage">
      <summary>
            Specifies the field name of the uploaded image through POST.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.HTTPPassword">
      <summary>
            Sets or returns the password used to log into the HTTP server.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.HTTPPort">
      <summary>
            Returns or sets the port number of the HTTP server.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.HTTPPostResponseString">
      <summary>
            Returns the response string from the HTTP server if an error occurs for HTTPUploadThroughPost() method. This is a runtime, read-only property.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.Net.HTTPUploadThroughPost(System.String,System.String,System.String,System.Byte[])">
      <summary>
            Uploads an image to the HTTP server through HTTP POST method.
            </summary>
      <param name="strHTTPServer">The name of the HTTP server.It should be only the name of the HTTP server, without "http://" or "https://".Port number is not needed here.</param>
      <param name="strActionPage">The specified page for posting image files. This is the relative path of the page, not the absolute path. For example: "upload.asp", not "http://www.webserver.com/upload.asp".</param>
      <param name="strHTTPRemoteFile">The name of the image to be created on the HTTP server. It should be the relative path of the file on the HTTP server. </param>
      <param name="imageBytes">The image to be uploaded in bytes</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.Net.HTTPUploadThroughPost(System.String,System.String,System.String,System.Collections.Generic.List{System.Int16},Dynamsoft.Core.Enums.EnumImageFileFormat)">
      <summary>
            Uploads the images of specified indexes in buffer to the HTTP server through HTTP POST method.
            </summary>
      <param name="strHTTPServer">The name of the HTTP server.It should be only the name of the HTTP server, without "http://" or "https://".Port number is not needed here.</param>
      <param name="strActionPage">The specified page for posting image files. This is the relative path of the page, not the absolute path. For example: "upload.asp", not "http://www.webserver.com/upload.asp".</param>
      <param name="listImageIndex">Specifies a list of the indexes of image in buffer. The index is 0-based.</param>
      <param name="enumImageFileFormat">The image format of the file to be created on the HTTP server.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.Net.HTTPUploadThroughPut(System.String,System.String,System.Byte[])">
      <summary>
            Uploads an image to the HTTP server through HTTP PUT method.
            </summary>
      <param name="strHTTPServer">The name of the HTTP server.It should be only the name of the HTTP server, without "http://" or "https://".Port number is not needed here.</param>
      <param name="strHTTPRemoteFile">The name of the image to be created on the HTTP server. It should be the relative path of the file on the HTTP server. </param>
      <param name="imageBytes">The image to be uploaded in bytes</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.Net.HTTPUploadThroughPut(System.String,System.String,System.Collections.Generic.List{System.Int16},Dynamsoft.Core.Enums.EnumImageFileFormat)">
      <summary>
            Uploads the image of a specified index in buffer to the HTTP server as a specified image format through HTTP PUT method.
            </summary>
      <param name="strHTTPServer">The name of the HTTP server.It should be only the name of the HTTP server, without "http://" or "https://".Port number is not needed here.</param>
      <param name="strHTTPRemoteFile">The name of the image to be created on the HTTP server. It should be the relative path of the file on the HTTP server. </param>
      <param name="listImageIndex">Specifies a list of the indexes of image in buffer. The index is 0-based.</param>
      <param name="enumImageFileFormat">The image format of the file to be created on the HTTP server.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.HTTPUserName">
      <summary>
            Returns or sets the user name used to log into the HTTP server.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.IfFTPPassiveMode">
      <summary>
            Returns or sets whether FTP passive mode is enabled. 
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.IfSSL">
      <summary>
             Returns or sets if an SSL connection should be used when uploading or downloading images via HTTP.
             </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
             When an error occurs, please check ImageCoreException.
             </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.MaxUploadImageSize">
      <summary>
            Returns or sets the maximum size of all the images can be uploaded.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="E:Dynamsoft.Core.Business.Net.OnInternetTransferPercentage">
      <summary>
            This event is triggered during image uploading or downloading images via HTTP or FTP.
            </summary>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.ProxyPassword">
      <summary>
            Returns or sets the password used to log into the proxy server.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.ProxyServerName">
      <summary>
            Returns or sets the name of the proxy server.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.ProxyServerPort">
      <summary>
            Returns or sets the port number of the proxy server.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="P:Dynamsoft.Core.Business.Net.ProxyUserName">
      <summary>
            Returns or sets the user name used to log into the proxy server.
            </summary>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="M:Dynamsoft.Core.Business.Net.SetHTTPFormField(System.String,System.String)">
      <summary>
            Sets a text parameter of a web form. The text parameter is passed while uploading images.
            </summary>
      <param name="strFieldName">Sspecifies the name of a text field in web form.</param>
      <param name="strFieldValue">Specifies the value of a text field in web form.</param>
      <exception cref="!:Dynamsoft.ImageCore.ImageCoreException">
            When an error occurs, please check ImageCoreException.
            </exception>
    </member>
    <member name="T:Dynamsoft.Core.Delegate.OnAddedHandler">
      <summary>
            Occurs after image add.
            </summary>
      <param name="e"></param>
    </member>
    <member name="T:Dynamsoft.Core.Delegate.OnInternetTransferPercentageHandler">
      <summary>
            Occurs when uploading or downloading images via HTTP or FTP.
            </summary>
      <param name="sPercent">Specifies upload or download progress.</param>
      <param name="cancel">Specifies if canncel upload or download. If you want to cancel upload or download, please set its member Cancelled value as true.</param>
    </member>
    <member name="T:Dynamsoft.Core.Delegate.OnRemovedHandler">
      <summary>
            Occurs after image remove.
            </summary>
      <param name="e"></param>
    </member>
    <member name="T:Dynamsoft.Core.Delegate.OnUpdatedHandler">
      <summary>
            Occurs after image Update.
            </summary>
      <param name="e"></param>
    </member>
    <member name="T:Dynamsoft.Core.Enums.AnnotationType">
      <summary>
            The types of annotation.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.AnnotationType.enumNone">
      <summary>
            Select an area.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.AnnotationType.enumPointer">
      <summary>
            Select an existing annotation. Press "Ctrl" to multi-select annotations.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.AnnotationType.enumText">
      <summary>
            Create a text.The annotation type will be set back to 1 once the annotation is completed.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.AnnotationType.enumLine">
      <summary>
            Create a line.The annotation type will be set back to 1 once the annotation is completed.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.AnnotationType.enumRectangle">
      <summary>
            Create a rectangle.The annotation type will be set back to 1 once the annotation is completed.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.AnnotationType.enumEllipse">
      <summary>
            Create a ellipse.The annotation type will be set back to 1 once the annotation is completed.
            </summary>
    </member>
    <member name="T:Dynamsoft.Core.Enums.EnumImageFileFormat">
      <summary>
            Image type
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumImageFileFormat.WEBTW_BMP">
      <summary>
            Native Microsoft format.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumImageFileFormat.WEBTW_JPG">
      <summary>
            JPEG format.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumImageFileFormat.WEBTW_TIF">
      <summary>
            Tagged Image File Format.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumImageFileFormat.WEBTW_PNG">
      <summary>
            An image format standard intended for use on the web, replaces GIF.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumImageFileFormat.WEBTW_GIF">
      <summary>
            Graphics Interchange Format.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumImageFileFormat.WEBTW_UNSUPPORT">
      <summary>
            A format that is not supported.
            </summary>
    </member>
    <member name="T:Dynamsoft.Core.Enums.EnumInterpolationMethod">
      <summary>
            The method to do interpolation.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumInterpolationMethod.NearestNeighbour"></member>
    <member name="F:Dynamsoft.Core.Enums.EnumInterpolationMethod.Bilinear"></member>
    <member name="F:Dynamsoft.Core.Enums.EnumInterpolationMethod.Bicubic"></member>
    <member name="F:Dynamsoft.Core.Enums.EnumInterpolationMethod.BestQuality"></member>
    <member name="T:Dynamsoft.Core.Enums.EnumMetaDataType">
      <summary>
            The types of meta data.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumMetaDataType.enumAnnotation">
      <summary>
            Annotation matedata.
            </summary>
    </member>
    <member name="T:Dynamsoft.Core.Enums.EnumTiffCompressionType">
      <summary>
            TIFF file compression type.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumTiffCompressionType.TIFF_AUTO">
      <summary>
            Auto mode.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumTiffCompressionType.TIFF_NONE">
      <summary>
            Dump mode.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumTiffCompressionType.TIFF_RLE">
      <summary>
            CCITT modified Huffman RLE.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumTiffCompressionType.TIFF_FAX3">
      <summary>
            CCITT Group 3 fax encoding.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumTiffCompressionType.TIFF_T4">
      <summary>
            CCITT T.4 (TIFF 6 name).
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumTiffCompressionType.TIFF_FAX4">
      <summary>
            CCITT Group 4 fax encoding.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumTiffCompressionType.TIFF_T6">
      <summary>
            CCITT T.6 (TIFF 6 name).
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumTiffCompressionType.TIFF_LZW">
      <summary>
            Lempel Ziv and Welch.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.EnumTiffCompressionType.TIFF_JPEG">
      <summary>
            Jpeg
            </summary>
    </member>
    <member name="T:Dynamsoft.Core.Enums.ErrorCode">
      <summary>
            DynamicDotNetTWAIN error code.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.Succeed">
      <summary>
            Successful.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_SUCCESS">
      <summary>
            Successful.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_BUMMER">
      <summary>
            General error.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_LOWMEMORY">
      <summary>
            No enough memory to perform the required operation.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_NODS">
      <summary>
            Source Manager is unable to find the specified Source.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_MAXCONNECTIONS">
      <summary>
            Source is connected to maximum supported number of applications. 
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_OPERATIONERROR">
      <summary>
            Source or Source Manager reported an error to the user and handled the error. 
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_BADCAP">
      <summary>
            Capability is not supported by Source or the specified operation is not supported by the capability, or capability had dependencies on other capabilities and cannot be operated upon at this time. 
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_BADPROTOCOL">
      <summary>
            Unrecognized operation triplet. 
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_BADVALUE">
      <summary>
            Data parameter out of supported range. 
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_SEQERROR">
      <summary>
            Operation out of expected sequence.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_BADDEST">
      <summary>
            Unknown destination in DSM_Entry.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_CAPUNSUPPORTED">
      <summary>
            Capability is not supported by source. 
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_CAPBADOPERATION">
      <summary>
            Operation is not supported by the capability. 
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWCC_CAPSEQERROR">
      <summary>
            Capability has dependencies on other capabilities and cannot be operated upon at this time. 
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_GeneralError">
      <summary>
             General error.
             </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_CANCEL">
      <summary>
            User cancelled the operation.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_INDEX">
      <summary>
            Invalid index.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_VALUE">
      <summary>
            Invalid value.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_BADPARAMETER">
      <summary>
            Data parameter out of supported range. 
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_BMP">
      <summary>
            BMP format error or not supported.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_NOTSUPPORTIMAGE">
      <summary>
            Image format is not supported.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_INVALID_IMAGE">
      <summary>
            Invalid image index. Original image does't exist.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_UPLOADFAILEDFORTOOBIG">
      <summary>
            The file too big for upload.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_FTP_HANDSHAKEEXCEPTION">
      <summary>
            Handshake exception.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_FTP_INVALIDPROXYUSERNAMEORPASSWORD">
      <summary>
            Proxy username or password invalid.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_FTP_PROTOCOLREQUESTNOTPASS">
      <summary>
            Protocol request is not passed.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_FTP_NOTCONNECTREMOTESERVER">
      <summary>
            Can't connect to remote server.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_FTP_MALFORMEDPASVRESULT">
      <summary>
            Malformed PASV result:
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_FTP_MALFORMEDPASVRESULTNOTSUPPORTED">
      <summary>
            Malformed PASV result (not supported):
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.ErrorCode.TWERR_IMAGE_ERRORBIGIMAGE">
      <summary>
            The image too big for resample.
            </summary>
    </member>
    <member name="T:Dynamsoft.Core.Enums.TextRotateType">
      <summary>
            Rotate text annotaion
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.TextRotateType.Rotate0">
      <summary></summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.TextRotateType.Rotate90">
      <summary>
            Text rotate 90 degrees.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.TextRotateType.Rotate180">
      <summary>
            Text roate 180 degrees.
            </summary>
    </member>
    <member name="F:Dynamsoft.Core.Enums.TextRotateType.Rotate270">
      <summary>
            Text rotate 270 degrees
            </summary>
    </member>
  </members>
</doc>